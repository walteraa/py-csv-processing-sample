---
version: '2.1'
services:
  db:
    image: 'mongo:latest'
    restart: always
    hostname: db
    ports:
      - "27017:27017"
    networks:
      integration_network:
        aliases:
          - &db_host db
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD-SHELL"
        - "echo 'db.runCommand(\"ping\").ok' | mongo mongo:27017/test --quiet 1"
  broker:
    image: 'rabbitmq:3.5.7-management'
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    volumes:
      - broker_data:/var/lib/rabbitmq
    ports:
      - '15673:15672'
      - '5672:5672'
    networks:
      integration_network:
        aliases:
          - &broker_host broker
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"
  worker:
    build:
      context: ./app
      dockerfile: Dockerfile-celery
    command: celery -A celery_app worker --loglevel=info
    volumes:
        - ./resources:/resources
        - ./csv-utils:/packages/csv-utils

    environment:
      - MONGO_HOST=db
      - MONGO_PORT=27017
      - BROKER_HOST=broker
      - BROKER_USER=admin
      - BROKER_PASS=mypass
      - TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}
      - TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}
      - TWITTER_TOKEN_KEY=${TWITTER_TOKEN_KEY}
      - TWITTER_TOKEN_SECRET=${TWITTER_TOKEN_SECRET}
    networks:
      integration_network:
        aliases:
          - &worker_host worker
    links:
      - broker
      - db
    depends_on:
      - broker
      - db

  web-app:
    build:
      context: ./app
      dockerfile: Dockerfile-web
    environment:
      - MONGO_HOST=db
      - MONGO_PORT=27017
      - FLASK_APP=/app/web/api.py
    ports:
      - '8080:5000'
    links:
      - db
    depends_on:
      - db
    networks:
      integration_network:
        aliases:
          - &webapp_host webapp


networks:
  integration_network:

volumes:
  db_data:
  broker_data:
